/*
 * Revenium Metering API
 *
 * Revenium Metering API
 *
 * OpenAPI spec version: 1.14.0-SNAPSHOT
 * Contact: info@revenium.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Revenium.Attributes;
using IO.Revenium.Models;
using IO.Revenium.Security;
using Microsoft.AspNetCore.Authorization;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using System.Net;
using System.Text;

namespace IO.Revenium.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class EventsApiController : ControllerBase
    {

        private String basePath = "https://api.dev.hcapp.io";
        /// <summary>
        /// Save can API event
        /// </summary>
        /// <remarks>Save an API event</remarks>
        /// <param name="body"></param>
        /// <response code="201">Metering data successfully recorded</response>
        [HttpPost]
        [Route("/meter/v1/api/event")]
        [ValidateModelState]
        [SwaggerOperation("SaveEvent")]
        public virtual IActionResult SaveEvent([FromBody]ApiEventDTO body)
        {

            HttpClient client = new HttpClient();
            client.DefaultRequestHeaders.Add("x-api-key", "hak_5WWXaQ_80f6f60e8135712cd282b13f4d8afa5ee8c016a758fbbc55f03902c5749b539c");
            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            var json = body.ToJson();
            Console.WriteLine(json);

            try
            {
                StringContent content = new StringContent(json, Encoding.UTF8, "application/json");
                String path = basePath + $"/meter/v1/api/event";
                var result = client.PostAsync(path, content);
                if (((int)result.Result.StatusCode).ToString().StartsWith('2'))
                {
                    return Ok(result);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
            return BadRequest();
        }
    }
}
